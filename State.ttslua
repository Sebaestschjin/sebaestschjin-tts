---@shape seb_State
---@field save fun(): nil | string
---@field load fun(savedState: nil | string): void

local State = {}

---@generic T: seb_State
---@param initial T
---@return T
function State.createState(initial)
    local self = --[[---@type T]] {}

    local data = initial
    local isDirty = true
    ---@type nil | string
    local representation = nil

    ---@return nil | string
    function self.save()
        if isDirty and data then
            isDirty = false
            representation = json.serialize(data)
        end

        return representation
    end

    ---@param savedState nil | string
    function self.load(savedState)
        if savedState and savedState ~= "" then
            data = json.parse(--[[---@not nil]] savedState)
            representation = savedState
        end
    end

    setmetatable(self, {
        __index = function(_, key)
            return data[key]
        end,

        __newindex = function(_, key, value)
            isDirty = true
            data[key] = value
        end,
    })

    return self
end

return State
