local TableUtil = require("sebaestschjin-tts.TableUtil")

---@class seb_Chain

---@alias seb_ChainCallback (fun(chain: seb_Chain): void) | (fun(chain: seb_Chain): boolean)

---@class seb_Chain_static : seb_Chain
---@overload fun(): seb_Chain
local Chain = {}

setmetatable(Chain, {
    __call = function(_)
        local self = --[[---@type seb_Chain]] {}

        local callbacks = --[[---@type seb_ChainCallback[] ]]{}

        ---@param callback seb_ChainCallback
        function self.add(callback)
            table.insert(callbacks, callback)
        end

        ---@param callback seb_ChainCallback
        function self.addNext(callback)
            table.insert(callbacks, 1, callback)
        end

        function self.proceed()
            if TableUtil.isNotEmpty(callbacks) then
                local nextCallback = table.remove(callbacks, 1)
                if nextCallback(self) then
                    self.proceed()
                end
            end
        end

        return self
    end
})

return Chain
